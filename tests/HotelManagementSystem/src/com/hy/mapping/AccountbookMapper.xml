<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hy.dao.AccountbookMapper" >
  <resultMap id="BaseResultMap" type="com.hy.po.Accountbook" >
    <id column="accountbookid" property="accountbookid" jdbcType="INTEGER" />
    <result column="accountbookcode" property="accountbookcode" jdbcType="VARCHAR" />
    <result column="accountbookname" property="accountbookname" jdbcType="VARCHAR" />
    <result column="accountid" property="accountid" jdbcType="INTEGER" />
    <result column="leaderaccountid" property="leaderaccountid" jdbcType="INTEGER" />
    <result column="transferaccountswayid" property="transferaccountswayid" jdbcType="INTEGER" />
    <result column="quota" property="quota" jdbcType="DECIMAL" />
    <result column="accountbookstatus" property="accountbookstatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    accountbookid, accountbookcode, accountbookname, accountid, leaderaccountid, transferaccountswayid, 
    quota, accountbookstatus
  </sql>
  
  <select id="findByStatus" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from accountbook
    where accountbookstatus = 0
  </select>
  
  <select id="queryPage" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from accountbook
    WHERE accountbookstatus = 0
    <if test="accountbookname != null &amp; accountbookname != ''" >
       and accountbookname LIKE CONCAT('%', #{accountbookname,jdbcType=VARCHAR}, '%')
    </if>
    LIMIT #{firstResult} ,#{pageSize}
  </select>
  
  <select id="count" resultType="java.lang.Integer">
    select COUNT(1)
    from accountbook
    where 1 = 1
    <if test="accountbookname != null &amp; accountbookname != ''" >
       and accountbookname LIKE CONCAT('%', #{accountbookname,jdbcType=VARCHAR}, '%')
    </if>
  </select>
  
  <select id="findAll" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from accountbook
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from accountbook
    where accountbookid = #{accountbookid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from accountbook
    where accountbookid = #{accountbookid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hy.po.Accountbook" >
    <selectKey resultType="java.lang.Integer" keyProperty="accountbookid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into accountbook (accountbookcode, accountbookname, 
      accountid, leaderaccountid, transferaccountswayid, 
      quota, accountbookstatus)
    values (#{accountbookcode,jdbcType=VARCHAR}, #{accountbookname,jdbcType=VARCHAR}, 
      #{accountid,jdbcType=INTEGER}, #{leaderaccountid,jdbcType=INTEGER}, #{transferaccountswayid,jdbcType=INTEGER}, 
      #{quota,jdbcType=DECIMAL}, #{accountbookstatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hy.po.Accountbook" >
    <selectKey resultType="java.lang.Integer" keyProperty="accountbookid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into accountbook
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="accountbookcode != null" >
        accountbookcode,
      </if>
      <if test="accountbookname != null" >
        accountbookname,
      </if>
      <if test="accountid != null" >
        accountid,
      </if>
      <if test="leaderaccountid != null" >
        leaderaccountid,
      </if>
      <if test="transferaccountswayid != null" >
        transferaccountswayid,
      </if>
      <if test="quota != null" >
        quota,
      </if>
      <if test="accountbookstatus != null" >
        accountbookstatus,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="accountbookcode != null" >
        #{accountbookcode,jdbcType=VARCHAR},
      </if>
      <if test="accountbookname != null" >
        #{accountbookname,jdbcType=VARCHAR},
      </if>
      <if test="accountid != null" >
        #{accountid,jdbcType=INTEGER},
      </if>
      <if test="leaderaccountid != null" >
        #{leaderaccountid,jdbcType=INTEGER},
      </if>
      <if test="transferaccountswayid != null" >
        #{transferaccountswayid,jdbcType=INTEGER},
      </if>
      <if test="quota != null" >
        #{quota,jdbcType=DECIMAL},
      </if>
      <if test="accountbookstatus != null" >
        #{accountbookstatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hy.po.Accountbook" >
    update accountbook
    <set >
      <if test="accountbookcode != null" >
        accountbookcode = #{accountbookcode,jdbcType=VARCHAR},
      </if>
      <if test="accountbookname != null" >
        accountbookname = #{accountbookname,jdbcType=VARCHAR},
      </if>
      <if test="accountid != null" >
        accountid = #{accountid,jdbcType=INTEGER},
      </if>
      <if test="leaderaccountid != null" >
        leaderaccountid = #{leaderaccountid,jdbcType=INTEGER},
      </if>
      <if test="transferaccountswayid != null" >
        transferaccountswayid = #{transferaccountswayid,jdbcType=INTEGER},
      </if>
      <if test="quota != null" >
        quota = #{quota,jdbcType=DECIMAL},
      </if>
      <if test="accountbookstatus != null" >
        accountbookstatus = #{accountbookstatus,jdbcType=INTEGER},
      </if>
    </set>
    where accountbookid = #{accountbookid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hy.po.Accountbook" >
    update accountbook
    set accountbookcode = #{accountbookcode,jdbcType=VARCHAR},
      accountbookname = #{accountbookname,jdbcType=VARCHAR},
      accountid = #{accountid,jdbcType=INTEGER},
      leaderaccountid = #{leaderaccountid,jdbcType=INTEGER},
      transferaccountswayid = #{transferaccountswayid,jdbcType=INTEGER},
      quota = #{quota,jdbcType=DECIMAL},
      accountbookstatus = #{accountbookstatus,jdbcType=INTEGER}
    where accountbookid = #{accountbookid,jdbcType=INTEGER}
  </update>
</mapper>