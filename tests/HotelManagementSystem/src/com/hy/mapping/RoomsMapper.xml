<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hy.dao.RoomsMapper">
	<resultMap id="BaseResultMap" type="com.hy.po.Rooms">
		<id column="roomsid" property="roomsid" jdbcType="INTEGER" />
		<result column="floorid" property="floorid" jdbcType="INTEGER" />
		<result column="roomnumber" property="roomnumber" jdbcType="INTEGER" />
		<result column="roomtypeid" property="roomtypeid" jdbcType="INTEGER" />
		<result column="orientation" property="orientation" jdbcType="VARCHAR" />
		<result column="characteristic" property="characteristic"
			jdbcType="VARCHAR" />
		<result column="roomstatus" property="roomstatus" jdbcType="INTEGER" />
		<result column="floornumber" property="floornumber" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		roomsid, floorid, roomnumber, roomtypeid, orientation, characteristic,
		roomstatus, floornumber
	</sql>
	
	<select id="queryRoomsByRoomsId" resultType="com.hy.po.Rooms" parameterType="java.lang.Integer">
		SELECT r.*, f.floorname FROM rooms r INNER JOIN FLOOR f ON r.floorid = f.floorid
		where roomsid = #{roomsid,jdbcType=INTEGER}
	</select>
	
	<select id="queryRoomsByParam" resultType="com.hy.po.Rooms">
		SELECT r.*, rt.roomtypename,rt.roomtypecode,f.floornumber AS floorcode
		,f.floorname FROM rooms r INNER JOIN roomtype rt ON
		r.roomtypeid = rt.roomtypeid INNER JOIN floor f ON r.floorid = f.floorid
		WHERE r.roomstatus =  2
		<if test="starnumber != null &amp; endnumber != null">
			and r.roomnumber &gt;= #{starnumber,jdbcType=INTEGER}
			and r.roomnumber &lt;= #{endnumber,jdbcType=INTEGER}
		</if>
		<if test="floorid  &gt; 0 ">
			and r.floorid = #{floorid,jdbcType=INTEGER}
		</if>
		<if test="floornumber &gt; 0 ">
			and r.floornumber = #{floornumber,jdbcType=INTEGER}
		</if>
		<if test="orientation &gt; 0 ">
			and r.orientation = #{orientation,jdbcType=INTEGER}
		</if>
		<if test="characteristic != null &amp; characteristic != ''">
			and r.characteristic LIKE CONCAT('%', #{characteristic,jdbcType=VARCHAR}, '%')
		</if>
		ORDER BY r.roomtypeid
	</select>
	
	
	<select id="findSurplusRooms" resultType="com.hy.vo.SurplusRooms">
		SELECT h.roomtypeid,h.roomtypename,h.roomstotal,
IFNULL((h.roomstotal - h.surplus),h.roomstotal) as surplus,h.arrivedate
from(SELECT rt.*, COUNT(1) AS roomstotal,a.roomnumber as surplus,

IFNULL(a.arrivedate,#{arrivedate,jdbcType=VARCHAR}) as arrivedate

FROM rooms r INNER JOIN roomtype rt ON r.roomtypeid = rt.roomtypeid
LEFT JOIN(SELECT SUM(rrd.roomnumber) AS roomnumber,rt.roomtypeid,rrd.arrivedate
FROM roomreservationdetail rrd
INNER JOIN roomtype rt ON rrd.roomtype = rt.roomtypeid
WHERE rrd.arrivedate ='2016-11-28'
GROUP BY rt.roomtypeid) AS a ON r.roomtypeid = a.roomtypeid
WHERE r.roomstatus = 2
GROUP BY rt.roomtypeid) as h
where h.arrivedate = #{arrivedate,jdbcType=VARCHAR} and h.roomtypeid = #{roomtypeid,jdbcType=INTEGER}
	</select>


	<select id="queryRoomsTotal" resultType="com.hy.vo.RoomsTotal" parameterType="com.hy.vo.RoomsTotalParam">
		SELECT h.roomtypeid,IFNULL(h.roomtypename,"合计") as roomtypename,h.roomtypecode,SUM(h.roomstotal) as roomstotal,
SUM(IFNULL((h.roomstotal - h.onedate),h.roomstotal)) as onedate,
SUM(IFNULL((h.roomstotal - h.twodate),h.roomstotal)) AS twodate,
SUM(IFNULL((h.roomstotal - h.threedate),h.roomstotal)) AS threedate,
SUM(IFNULL((h.roomstotal - h.fourdate),h.roomstotal)) AS fourdate,
SUM(IFNULL((h.roomstotal - h.fivedate),h.roomstotal)) AS fivedate,
SUM(IFNULL((h.roomstotal - h.sixdate),h.roomstotal)) AS sixdate,
SUM(IFNULL((h.roomstotal - h.sevendate),h.roomstotal)) AS sevendate
from
(SELECT rt.*, COUNT(1) AS roomstotal,a.roomnumber as onedate,b.roomnumber as twodate,
c.roomnumber AS threedate,d.roomnumber AS fourdate,e.roomnumber AS fivedate,
f.roomnumber AS sixdate,g.roomnumber AS sevendate
FROM rooms r INNER JOIN 
roomtype rt ON r.roomtypeid = rt.roomtypeid

LEFT JOIN(SELECT SUM(r.roomnumber) AS roomnumber,rt.roomtypeid FROM roomreservationdetail r
INNER JOIN roomtype rt ON r.roomtype = rt.roomtypeid 

WHERE r.arrivedate = #{onedate,jdbcType=VARCHAR} AND r.roomstatus = 1 OR r.roomstatus = 2
GROUP BY rt.roomtypeid) AS a ON r.roomtypeid = a.roomtypeid

LEFT JOIN(SELECT SUM(r.roomnumber) AS roomnumber,rt.roomtypeid FROM roomreservationdetail r
INNER JOIN roomtype rt ON r.roomtype = rt.roomtypeid 

WHERE r.arrivedate = #{twodate,jdbcType=VARCHAR} AND r.roomstatus = 1 OR r.roomstatus = 2
GROUP BY rt.roomtypeid) AS b ON r.roomtypeid = b.roomtypeid

LEFT JOIN(SELECT SUM(r.roomnumber) AS roomnumber,rt.roomtypeid FROM roomreservationdetail r
INNER JOIN roomtype rt ON r.roomtype = rt.roomtypeid 

WHERE r.arrivedate = #{threedate,jdbcType=VARCHAR} AND r.roomstatus = 1 OR r.roomstatus = 2
GROUP BY rt.roomtypeid) AS c ON r.roomtypeid = c.roomtypeid

LEFT JOIN(SELECT SUM(r.roomnumber) AS roomnumber,rt.roomtypeid FROM roomreservationdetail r
INNER JOIN roomtype rt ON r.roomtype = rt.roomtypeid 

WHERE r.arrivedate = #{fourdate,jdbcType=VARCHAR} AND r.roomstatus = 1 OR r.roomstatus = 2
GROUP BY rt.roomtypeid) AS d ON r.roomtypeid = d.roomtypeid

LEFT JOIN(SELECT SUM(r.roomnumber) AS roomnumber,rt.roomtypeid FROM roomreservationdetail r
INNER JOIN roomtype rt ON r.roomtype = rt.roomtypeid 

WHERE r.arrivedate = #{fivedate,jdbcType=VARCHAR} AND r.roomstatus = 1 OR r.roomstatus = 2
GROUP BY rt.roomtypeid) AS e ON r.roomtypeid = e.roomtypeid

LEFT JOIN(SELECT SUM(r.roomnumber) AS roomnumber,rt.roomtypeid FROM roomreservationdetail r
INNER JOIN roomtype rt ON r.roomtype = rt.roomtypeid 

WHERE r.arrivedate = #{sixdate,jdbcType=VARCHAR} AND r.roomstatus = 1 OR r.roomstatus = 2
GROUP BY rt.roomtypeid) AS f ON r.roomtypeid = f.roomtypeid

LEFT JOIN(SELECT SUM(r.roomnumber) AS roomnumber,rt.roomtypeid FROM roomreservationdetail r
INNER JOIN roomtype rt ON r.roomtype = rt.roomtypeid 

WHERE r.arrivedate = #{sevendate,jdbcType=VARCHAR} AND r.roomstatus = 1 OR r.roomstatus = 2 
GROUP BY rt.roomtypeid) AS g ON r.roomtypeid = g.roomtypeid

WHERE r.roomstatus = 2
GROUP BY rt.roomtypeid) as h GROUP BY h.roomtypename WITH ROLLUP
	</select>

	<select id="queryByStatus" resultType="com.hy.po.Rooms">
		SELECT r.*, rt.roomtypename,rt.roomtypecode,f.floornumber AS floorcode
		,f.floorname FROM rooms r INNER JOIN roomtype rt ON
		r.roomtypeid = rt.roomtypeid INNER JOIN floor f ON r.floorid = f.floorid
		where r.roomstatus = #{roomstatus,jdbcType=INTEGER}
		ORDER BY floorname
	</select>
	
	<select id="queryByRoomTypeId" resultType="com.hy.po.Rooms">
		SELECT r.*, rt.roomtypename,rt.roomtypecode,f.floornumber AS floorcode
		,f.floorname FROM rooms r INNER JOIN roomtype rt ON
		r.roomtypeid = rt.roomtypeid INNER JOIN floor f ON r.floorid = f.floorid
		where r.roomstatus = 2
		<if test="roomtypeid != null &amp; roomtypeid != ''">
			and r.roomtypeid = #{roomtypeid,jdbcType=INTEGER}
		</if>
		ORDER BY floorname
	</select>

	<select id="queryByParam" resultType="com.hy.po.Rooms">
		SELECT r.*, rt.roomtypename,rt.roomtypecode,f.floornumber AS floorcode
		,f.floorname FROM rooms r INNER JOIN roomtype rt ON
		r.roomtypeid = rt.roomtypeid INNER JOIN floor f ON r.floorid = f.floorid
		where 1 = 1
		<if test="roomnumber != null &amp; roomnumber != ''">
			and roomnumber LIKE CONCAT('%', #{roomnumber,jdbcType=VARCHAR}, '%')
		</if>
		<if test="floorid  &gt; 0 ">
			and r.floorid = #{floorid,jdbcType=INTEGER}
		</if>
		<if test="floornumber &gt; 0 ">
			and r.floornumber = #{floornumber,jdbcType=INTEGER}
		</if>
		ORDER BY r.floorid,r.roomnumber
	</select>

	<select id="findAll" resultType="com.hy.po.Rooms">
		SELECT r.*, rt.roomtypename,rt.roomtypecode,f.floornumber AS floorcode,
		f.floorname FROM rooms r INNER JOIN roomtype rt ON
		r.roomtypeid = rt.roomtypeid INNER JOIN floor f ON r.floorid = f.floorid
		ORDER BY r.floorid,r.roomnumber
	</select>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from rooms
		where roomsid = #{roomsid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from rooms
		where roomsid = #{roomsid,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.hy.po.Rooms">
		insert into rooms (roomsid, floorid, roomnumber,
		roomtypeid, orientation, characteristic,
		roomstatus, floornumber)
		values (#{roomsid,jdbcType=INTEGER}, #{floorid,jdbcType=INTEGER},
		#{roomnumber,jdbcType=INTEGER},
		#{roomtypeid,jdbcType=INTEGER}, #{orientation,jdbcType=VARCHAR}, #{characteristic,jdbcType=VARCHAR},
		#{roomstatus,jdbcType=INTEGER}, #{floornumber,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.hy.po.Rooms">
		insert into rooms
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roomsid != null">
				roomsid,
			</if>
			<if test="floorid != null">
				floorid,
			</if>
			<if test="roomnumber != null">
				roomnumber,
			</if>
			<if test="roomtypeid != null">
				roomtypeid,
			</if>
			<if test="orientation != null">
				orientation,
			</if>
			<if test="characteristic != null">
				characteristic,
			</if>
			<if test="roomstatus != null">
				roomstatus,
			</if>
			<if test="floornumber != null">
				floornumber,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roomsid != null">
				#{roomsid,jdbcType=INTEGER},
			</if>
			<if test="floorid != null">
				#{floorid,jdbcType=INTEGER},
			</if>
			<if test="roomnumber != null">
				#{roomnumber,jdbcType=INTEGER},
			</if>
			<if test="roomtypeid != null">
				#{roomtypeid,jdbcType=INTEGER},
			</if>
			<if test="orientation != null">
				#{orientation,jdbcType=VARCHAR},
			</if>
			<if test="characteristic != null">
				#{characteristic,jdbcType=VARCHAR},
			</if>
			<if test="roomstatus != null">
				#{roomstatus,jdbcType=INTEGER},
			</if>
			<if test="floornumber != null">
				#{floornumber,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.hy.po.Rooms">
		update rooms
		<set>
			<if test="floorid != null">
				floorid = #{floorid,jdbcType=INTEGER},
			</if>
			<if test="roomnumber != null">
				roomnumber = #{roomnumber,jdbcType=INTEGER},
			</if>
			<if test="roomtypeid != null">
				roomtypeid = #{roomtypeid,jdbcType=INTEGER},
			</if>
			<if test="orientation != null">
				orientation = #{orientation,jdbcType=VARCHAR},
			</if>
			<if test="characteristic != null">
				characteristic = #{characteristic,jdbcType=VARCHAR},
			</if>
			<if test="roomstatus != null">
				roomstatus = #{roomstatus,jdbcType=INTEGER},
			</if>
			<if test="floornumber != null">
				floornumber = #{floornumber,jdbcType=INTEGER},
			</if>
		</set>
		where roomsid = #{roomsid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.hy.po.Rooms">
		update rooms
		set floorid = #{floorid,jdbcType=INTEGER},
		roomnumber = #{roomnumber,jdbcType=INTEGER},
		roomtypeid = #{roomtypeid,jdbcType=INTEGER},
		orientation = #{orientation,jdbcType=VARCHAR},
		characteristic = #{characteristic,jdbcType=VARCHAR},
		roomstatus = #{roomstatus,jdbcType=INTEGER},
		floornumber = #{floornumber,jdbcType=INTEGER}
		where roomsid = #{roomsid,jdbcType=INTEGER}
	</update>
</mapper>