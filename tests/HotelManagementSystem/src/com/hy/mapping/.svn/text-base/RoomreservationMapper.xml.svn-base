<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hy.dao.RoomreservationMapper" >
  <resultMap id="BaseResultMap" type="com.hy.po.Roomreservation" >
    <id column="roomreservationid" property="roomreservationid" jdbcType="INTEGER" />
    <result column="reservationnumber" property="reservationnumber" jdbcType="VARCHAR" />
    <result column="department" property="department" jdbcType="VARCHAR" />
    <result column="agreementclientid" property="agreementclientid" jdbcType="INTEGER" />
    <result column="contacts" property="contacts" jdbcType="VARCHAR" />
    <result column="teamid" property="teamid" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="marketid" property="marketid" jdbcType="INTEGER" />
    <result column="clientsourceid" property="clientsourceid" jdbcType="INTEGER" />
    <result column="salesmanid" property="salesmanid" jdbcType="INTEGER" />
    <result column="signbilltemplateid" property="signbilltemplateid" jdbcType="INTEGER" />
    <result column="viptypeid" property="viptypeid" jdbcType="INTEGER" />
    <result column="standardmeal" property="standardmeal" jdbcType="VARCHAR" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="reservationstatus" property="reservationstatus" jdbcType="INTEGER" />
    <result column="reservationtype" property="reservationtype" jdbcType="INTEGER" />
    <result column="certigierid" property="certigierid" jdbcType="INTEGER" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    roomreservationid, reservationnumber, department, agreementclientid, contacts, teamid, 
    phone, marketid, clientsourceid, salesmanid, signbilltemplateid, viptypeid, standardmeal, 
    comment, reservationstatus, reservationtype, certigierid, reason
  </sql>
  
  <select id="findByPrimaryKey" resultType="com.hy.vo.RoomReservationVo" parameterType="java.lang.Integer">
    SELECT rr.*,t.teamname,a.agreementclientname,s.salesmanname,oi.otherinfoid,oi.arrivegrogshopflight,oi.leavegrogshopflight,
min(tt.arrivedate) as arrivedate,max(tt.leavedate) as leavedate,SUM(tt.roomnumber) AS roomnumber,
SUM(tt.freebed) AS freebed,SUM(tt.adult) AS adult,SUM(tt.children) AS children,tt.obligateroomdate
from roomreservation rr
left JOIN team t on rr.teamid = t.teamid
left JOIN agreementclient a on rr.agreementclientid = a.agreementclientid
LEFT JOIN salesman s ON rr.salesmanid = s.salesmanid
left join otherinfo oi on rr.roomreservationid = oi.roomreservationid
left JOIN roomreservationdetail tt on rr.roomreservationid = tt.roomreservationid
    
    WHERE rr.roomreservationid = #{roomreservationid,jdbcType=INTEGER}
  </select>
  
  <select id="queryPage" resultType="com.hy.vo.RoomReservationVo" parameterType="com.hy.vo.RoomReservation">
    
    SELECT rr.*,t.teamname,a.agreementclientname,s.salesmanname,oi.otherinfoid,oi.arrivegrogshopflight,oi.leavegrogshopflight,
min(tt.arrivedate) as arrivedate,max(tt.leavedate) as leavedate,SUM(tt.roomnumber) AS roomnumber,
SUM(tt.freebed) AS freebed,SUM(tt.adult) AS adult,SUM(tt.children) AS children,tt.obligateroomdate
from roomreservation rr
left JOIN team t on rr.teamid = t.teamid
left JOIN agreementclient a on rr.agreementclientid = a.agreementclientid
LEFT JOIN salesman s ON rr.salesmanid = s.salesmanid
left join otherinfo oi on rr.roomreservationid = oi.roomreservationid
left JOIN roomreservationdetail tt on rr.roomreservationid = tt.roomreservationid

    
    WHERE 1 = 1
    <if test="teamname != null &amp; teamname != ''" >
       and t.teamname LIKE CONCAT('%', #{teamname,jdbcType=VARCHAR}, '%')
    </if>
    <if test="signbilltemplateid != null &amp; signbilltemplateid != ''" >
       and rr.signbilltemplateid = #{signbilltemplateid,jdbcType=INTEGER}
    </if>
    <if test="agreementclientname != null &amp; agreementclientname != ''" >
       and a.agreementclientname LIKE CONCAT('%', #{agreementclientname,jdbcType=VARCHAR}, '%')
    </if>
    <if test="reservationnumber != null &amp; reservationnumber != ''" >
       and rr.reservationnumber LIKE CONCAT('%', #{reservationnumber,jdbcType=VARCHAR}, '%')
    </if>
    group by tt.roomreservationid
    ORDER BY tt.roomreservationid DESC
    LIMIT #{firstResult} ,#{pageSize}
  </select>
  <select id="count" resultType="java.lang.Integer" parameterType="com.hy.vo.RoomReservation">
    SELECT count(1)
from roomreservation rr
left JOIN team t on rr.teamid = t.teamid
left JOIN agreementclient a on rr.agreementclientid = a.agreementclientid
LEFT JOIN salesman s ON rr.salesmanid = s.salesmanid
left join otherinfo oi on rr.roomreservationid = oi.roomreservationid
    where 1 = 1
    <if test="teamname != null &amp; teamname != ''" >
       and t.teamname LIKE CONCAT('%', #{teamname,jdbcType=VARCHAR}, '%')
    </if>
    <if test="signbilltemplateid != null &amp; signbilltemplateid != ''" >
       and rr.signbilltemplateid = #{signbilltemplateid,jdbcType=INTEGER}
    </if>
    <if test="agreementclientname != null &amp; agreementclientname != ''" >
       and a.agreementclientname LIKE CONCAT('%', #{agreementclientname,jdbcType=VARCHAR}, '%')
    </if>
    <if test="reservationnumber != null &amp; reservationnumber != ''" >
       and rr.reservationnumber LIKE CONCAT('%', #{reservationnumber,jdbcType=VARCHAR}, '%')
    </if>
  </select>
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from roomreservation
    where roomreservationid = #{roomreservationid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from roomreservation
    where roomreservationid = #{roomreservationid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hy.po.Roomreservation" >
    <selectKey resultType="java.lang.Integer" keyProperty="roomreservationid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into roomreservation (reservationnumber, department, agreementclientid, 
      contacts, teamid, phone, 
      marketid, clientsourceid, salesmanid, 
      signbilltemplateid, viptypeid, standardmeal, 
      comment, reservationstatus, reservationtype, 
      certigierid, reason)
    values (#{reservationnumber,jdbcType=VARCHAR}, #{department,jdbcType=VARCHAR}, #{agreementclientid,jdbcType=INTEGER}, 
      #{contacts,jdbcType=VARCHAR}, #{teamid,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, 
      #{marketid,jdbcType=INTEGER}, #{clientsourceid,jdbcType=INTEGER}, #{salesmanid,jdbcType=INTEGER}, 
      #{signbilltemplateid,jdbcType=INTEGER}, #{viptypeid,jdbcType=INTEGER}, #{standardmeal,jdbcType=VARCHAR}, 
      #{comment,jdbcType=VARCHAR}, #{reservationstatus,jdbcType=INTEGER}, #{reservationtype,jdbcType=INTEGER}, 
      #{certigierid,jdbcType=INTEGER}, #{reason,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hy.po.Roomreservation" >
    <selectKey resultType="java.lang.Integer" keyProperty="roomreservationid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into roomreservation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="reservationnumber != null" >
        reservationnumber,
      </if>
      <if test="department != null" >
        department,
      </if>
      <if test="agreementclientid != null" >
        agreementclientid,
      </if>
      <if test="contacts != null" >
        contacts,
      </if>
      <if test="teamid != null" >
        teamid,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="marketid != null" >
        marketid,
      </if>
      <if test="clientsourceid != null" >
        clientsourceid,
      </if>
      <if test="salesmanid != null" >
        salesmanid,
      </if>
      <if test="signbilltemplateid != null" >
        signbilltemplateid,
      </if>
      <if test="viptypeid != null" >
        viptypeid,
      </if>
      <if test="standardmeal != null" >
        standardmeal,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="reservationstatus != null" >
        reservationstatus,
      </if>
      <if test="reservationtype != null" >
        reservationtype,
      </if>
      <if test="certigierid != null" >
        certigierid,
      </if>
      <if test="reason != null" >
        reason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="reservationnumber != null" >
        #{reservationnumber,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="agreementclientid != null" >
        #{agreementclientid,jdbcType=INTEGER},
      </if>
      <if test="contacts != null" >
        #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="teamid != null" >
        #{teamid,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="marketid != null" >
        #{marketid,jdbcType=INTEGER},
      </if>
      <if test="clientsourceid != null" >
        #{clientsourceid,jdbcType=INTEGER},
      </if>
      <if test="salesmanid != null" >
        #{salesmanid,jdbcType=INTEGER},
      </if>
      <if test="signbilltemplateid != null" >
        #{signbilltemplateid,jdbcType=INTEGER},
      </if>
      <if test="viptypeid != null" >
        #{viptypeid,jdbcType=INTEGER},
      </if>
      <if test="standardmeal != null" >
        #{standardmeal,jdbcType=VARCHAR},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="reservationstatus != null" >
        #{reservationstatus,jdbcType=INTEGER},
      </if>
      <if test="reservationtype != null" >
        #{reservationtype,jdbcType=INTEGER},
      </if>
      <if test="certigierid != null" >
        #{certigierid,jdbcType=INTEGER},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hy.po.Roomreservation" >
    update roomreservation
    <set >
      <if test="reservationnumber != null" >
        reservationnumber = #{reservationnumber,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="agreementclientid != null" >
        agreementclientid = #{agreementclientid,jdbcType=INTEGER},
      </if>
      <if test="contacts != null" >
        contacts = #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="teamid != null" >
        teamid = #{teamid,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="marketid != null" >
        marketid = #{marketid,jdbcType=INTEGER},
      </if>
      <if test="clientsourceid != null" >
        clientsourceid = #{clientsourceid,jdbcType=INTEGER},
      </if>
      <if test="salesmanid != null" >
        salesmanid = #{salesmanid,jdbcType=INTEGER},
      </if>
      <if test="signbilltemplateid != null" >
        signbilltemplateid = #{signbilltemplateid,jdbcType=INTEGER},
      </if>
      <if test="viptypeid != null" >
        viptypeid = #{viptypeid,jdbcType=INTEGER},
      </if>
      <if test="standardmeal != null" >
        standardmeal = #{standardmeal,jdbcType=VARCHAR},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="reservationstatus != null" >
        reservationstatus = #{reservationstatus,jdbcType=INTEGER},
      </if>
      <if test="reservationtype != null" >
        reservationtype = #{reservationtype,jdbcType=INTEGER},
      </if>
      <if test="certigierid != null" >
        certigierid = #{certigierid,jdbcType=INTEGER},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
    </set>
    where roomreservationid = #{roomreservationid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hy.po.Roomreservation" >
    update roomreservation
    set reservationnumber = #{reservationnumber,jdbcType=VARCHAR},
      department = #{department,jdbcType=VARCHAR},
      agreementclientid = #{agreementclientid,jdbcType=INTEGER},
      contacts = #{contacts,jdbcType=VARCHAR},
      teamid = #{teamid,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      marketid = #{marketid,jdbcType=INTEGER},
      clientsourceid = #{clientsourceid,jdbcType=INTEGER},
      salesmanid = #{salesmanid,jdbcType=INTEGER},
      signbilltemplateid = #{signbilltemplateid,jdbcType=INTEGER},
      viptypeid = #{viptypeid,jdbcType=INTEGER},
      standardmeal = #{standardmeal,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=VARCHAR},
      reservationstatus = #{reservationstatus,jdbcType=INTEGER},
      reservationtype = #{reservationtype,jdbcType=INTEGER},
      certigierid = #{certigierid,jdbcType=INTEGER},
      reason = #{reason,jdbcType=VARCHAR}
    where roomreservationid = #{roomreservationid,jdbcType=INTEGER}
  </update>
</mapper>