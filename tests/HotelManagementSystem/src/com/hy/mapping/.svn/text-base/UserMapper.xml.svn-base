<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hy.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.hy.po.User" >
    <id column="userid" property="userid" jdbcType="INTEGER" />
    <result column="employeeid" property="employeeid" jdbcType="INTEGER" />
    <result column="roleid" property="roleid" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    userid, employeeid, roleid, username, password
  </sql>
  
  <select id="login" resultMap="BaseResultMap">
    SELECT * FROM user where username = #{username,jdbcType=VARCHAR} and password = #{password,jdbcType=VARCHAR}
  </select>
  
  <select id="findAll" resultType="com.hy.po.User">
    SELECT u.*,r.rolename,e.employeename FROM USER u INNER JOIN role r ON u.roleid = r.roleid INNER JOIN employee e ON u.employeeid = e.employeeid
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where userid = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where userid = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hy.po.User" >
    <selectKey resultType="java.lang.Integer" keyProperty="userid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user (employeeid, roleid, username, 
      password)
    values (#{employeeid,jdbcType=INTEGER}, #{roleid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hy.po.User" >
    <selectKey resultType="java.lang.Integer" keyProperty="userid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="employeeid != null" >
        employeeid,
      </if>
      <if test="roleid != null" >
        roleid,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="employeeid != null" >
        #{employeeid,jdbcType=INTEGER},
      </if>
      <if test="roleid != null" >
        #{roleid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hy.po.User" >
    update user
    <set >
      <if test="employeeid != null" >
        employeeid = #{employeeid,jdbcType=INTEGER},
      </if>
      <if test="roleid != null" >
        roleid = #{roleid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
    </set>
    where userid = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hy.po.User" >
    update user
    set employeeid = #{employeeid,jdbcType=INTEGER},
      roleid = #{roleid,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR}
    where userid = #{userid,jdbcType=INTEGER}
  </update>
</mapper>