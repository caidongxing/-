<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hy.dao.EmployeeMapper" >
  <resultMap id="BaseResultMap" type="com.hy.po.Employee" >
    <id column="employeeid" property="employeeid" jdbcType="INTEGER" />
    <result column="employeecode" property="employeecode" jdbcType="VARCHAR" />
    <result column="employeename" property="employeename" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="identitycode" property="identitycode" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
  </resultMap>
  <sql id="Base_Column_List" >
    employeeid, employeecode, employeename, sex, identitycode, birthday
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from employee
    where employeeid = #{employeeid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from employee
    where employeeid = #{employeeid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hy.po.Employee" >
    <selectKey resultType="java.lang.Integer" keyProperty="employeeid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into employee (employeecode, employeename, sex, 
      identitycode, birthday)
    values (#{employeecode,jdbcType=VARCHAR}, #{employeename,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{identitycode,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.hy.po.Employee" >
    <selectKey resultType="java.lang.Integer" keyProperty="employeeid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="employeecode != null" >
        employeecode,
      </if>
      <if test="employeename != null" >
        employeename,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="identitycode != null" >
        identitycode,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="employeecode != null" >
        #{employeecode,jdbcType=VARCHAR},
      </if>
      <if test="employeename != null" >
        #{employeename,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="identitycode != null" >
        #{identitycode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hy.po.Employee" >
    update employee
    <set >
      <if test="employeecode != null" >
        employeecode = #{employeecode,jdbcType=VARCHAR},
      </if>
      <if test="employeename != null" >
        employeename = #{employeename,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="identitycode != null" >
        identitycode = #{identitycode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
    </set>
    where employeeid = #{employeeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hy.po.Employee" >
    update employee
    set employeecode = #{employeecode,jdbcType=VARCHAR},
      employeename = #{employeename,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      identitycode = #{identitycode,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE}
    where employeeid = #{employeeid,jdbcType=INTEGER}
  </update>
</mapper>